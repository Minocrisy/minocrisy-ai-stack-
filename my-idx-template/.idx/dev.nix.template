# Master development environment configuration
# Template file - Copy to dev.local.nix and update with your credentials
# Last updated: 2024
# Purpose: Complete AI, Web, and Cloud development environment with Agent Network support

{ pkgs, ... }: {
  channel = "stable-23.11";

  packages = [
    # Core Development
    pkgs.nodejs_20
    pkgs.python311
    pkgs.python311Packages.pip
    pkgs.go
    pkgs.git
    pkgs.ripgrep
    pkgs.jq

    # Build & Deploy
    pkgs.docker
    pkgs.docker-compose
    pkgs.kubectl
    pkgs.terraform
    pkgs.nginx

    # Database Tools
    pkgs.mongodb-tools
    pkgs.mongosh
    pkgs.postgresql   # PostgreSQL client
    pkgs.redis       # Redis client

    # Cloud & Infrastructure
    pkgs.google-cloud-sdk
    pkgs.awscli2     # AWS CLI
    pkgs.azure-cli   # Azure CLI

    # Media & Processing
    pkgs.ffmpeg
    pkgs.opencv
    pkgs.imagemagick
    pkgs.vips        # For sharp image processing

    # Security & Authentication
    pkgs.gh
    pkgs.gnupg
    pkgs.openssh
    pkgs.sops        # Secrets management

    # Development Tools
    pkgs.curl
    pkgs.poetry
    pkgs.rust-analyzer
    pkgs.rustc
    pkgs.cargo

    # Language Support
    pkgs.python311Packages.python-lsp-server
    pkgs.nodePackages.typescript-language-server
    pkgs.gopls
    pkgs.rust-analyzer
    pkgs.nil         # Nix language server

    # Agent Network Support
    pkgs.puppeteer-cli  # For browser automation
    pkgs.chromium      # Required for Puppeteer
  ];

  env = {
    # Editor & Terminal
    EDITOR = "code";
    TERM = "xterm-256color";

    # API Keys & Credentials - Replace with your actual keys in dev.local.nix
    CLINE_API_KEY = "YOUR_CLINE_API_KEY";
    NOTION_API_KEY = "YOUR_NOTION_API_KEY";
    NOTION_DATABASE_ID = "YOUR_NOTION_DATABASE_ID";
    
    # Twitter Integration
    TWITTER_API_KEY = "YOUR_TWITTER_API_KEY";
    TWITTER_API_SECRET = "YOUR_TWITTER_API_SECRET";
    TWITTER_ACCESS_TOKEN = "YOUR_TWITTER_ACCESS_TOKEN";
    TWITTER_ACCESS_SECRET = "YOUR_TWITTER_ACCESS_SECRET";
    
    # AI Integration
    GLHF_API_KEY = "YOUR_GLHF_API_KEY";
    GEMINI_API_KEY = "YOUR_GEMINI_API_KEY";  # For Gemini integration
    
    # Agent Network Configuration
    AGENT_NETWORK_PORT = "3000";
    AGENT_NETWORK_HOST = "localhost";
    PUPPETEER_EXECUTABLE_PATH = "${pkgs.chromium}/bin/chromium";  # For browser automation

    # Database Connections
    MONGODB_URI = "";
    POSTGRES_URL = "";
    REDIS_URL = "";

    # Cloud Platform Configurations
    GOOGLE_APPLICATION_CREDENTIALS = "";
    GOOGLE_CLOUD_PROJECT = "";
    AWS_PROFILE = "";
    AZURE_SUBSCRIPTION_ID = "";
  };

  # IDX specific configurations
  idx = {
    extensions = [
      # Core IDE Features
      "vscodevim.vim"
      "editorconfig.editorconfig"
      "streetsidesoftware.code-spell-checker"
      
      # Development
      "ms-python.python"
      "golang.go"
      "rust-lang.rust-analyzer"
      "dbaeumer.vscode-eslint"
      "esbenp.prettier-vscode"
      
      # Cloud & Infrastructure
      "ms-azuretools.vscode-docker"
      "hashicorp.terraform"
      "googlecloudtools.cloudcode"
      
      # Database
      "mongodb.mongodb-vscode"
      "cweijan.vscode-postgresql-client2"
      
      # Collaboration & Source Control
      "github.copilot"
      "github.copilot-chat"
      "eamodio.gitlens"
      "mhutchie.git-graph"
      
      # IDE Enhancements
      "usernamehw.errorlens"
      "gruntfuggly.todo-tree"
      "christian-kohler.path-intellisense"
      "visualstudioexptteam.vscodeintellicode"

      # AI & Agent Support
      "google.cloud-code"  # For Gemini integration
      "ms-toolsai.jupyter" # For AI notebooks
      "ms-python.vscode-pylance"
    ];

    workspace = {
      onCreate = {
        setup-check = ''
          echo "üîß Setting up development environment..."
          echo "Checking core dependencies..."
          git --version
          docker --version
          python3 --version
          node --version

          echo "Verifying agent network dependencies..."
          if command -v chromium &> /dev/null; then
            echo "‚úì Chromium installed"
          else
            echo "‚ö†Ô∏è Chromium not found"
          fi
        '';
      };

      onStart = {
        environment-check = ''
          echo "üîç Checking development environment..."
          echo "System Tools:"
          echo "============"
          git --version
          docker --version
          python3 --version
          node --version
          terraform --version
          aws --version
          gcloud --version

          echo "Agent Network Status:"
          echo "===================="
          echo "Checking agent network configuration..."
          if [ -n "$AGENT_NETWORK_PORT" ]; then
            echo "‚úì Agent network configured on port $AGENT_NETWORK_PORT"
          else
            echo "‚ö†Ô∏è Agent network port not configured"
          fi

          if [ -n "$PUPPETEER_EXECUTABLE_PATH" ]; then
            echo "‚úì Browser automation path configured"
          else
            echo "‚ö†Ô∏è Browser automation path not set"
          fi
        '';
      };
    };
  };
}
